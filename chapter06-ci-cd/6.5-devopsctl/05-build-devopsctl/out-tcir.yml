apiVersion: apps/v1
kind: Deployment
metadata:
  name: register-api
  namespace: tcir-app
  labels:
    name: register-api
spec:
  selector:
    matchLabels:
      name: register-api
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: register-api
    spec:
      containers:
      - name: register-api
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "register-api"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: register-api
  namespace: tcir-app
  labels:
    name: register-api
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: register-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mail-consumer
  namespace: tcir-app
  labels:
    name: mail-consumer
spec:
  selector:
    matchLabels:
      name: mail-consumer
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: mail-consumer
    spec:
      containers:
      - name: mail-consumer
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "mail-consumer"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: mail-consumer
  namespace: tcir-app
  labels:
    name: mail-consumer
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: mail-consumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batch-scheduler
  namespace: tcir-app
  labels:
    name: batch-scheduler
spec:
  selector:
    matchLabels:
      name: batch-scheduler
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: batch-scheduler
    spec:
      containers:
      - name: batch-scheduler
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "batch-scheduler"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: batch-scheduler
  namespace: tcir-app
  labels:
    name: batch-scheduler
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: batch-scheduler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batch-ptask-api
  namespace: tcir-app
  labels:
    name: batch-ptask-api
spec:
  selector:
    matchLabels:
      name: batch-ptask-api
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: batch-ptask-api
    spec:
      containers:
      - name: batch-ptask-api
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "batch-ptask-api"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: batch-ptask-api
  namespace: tcir-app
  labels:
    name: batch-ptask-api
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: batch-ptask-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batch-ptask-worker
  namespace: tcir-app
  labels:
    name: batch-ptask-worker
spec:
  selector:
    matchLabels:
      name: batch-ptask-worker
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: batch-ptask-worker
    spec:
      containers:
      - name: batch-ptask-worker
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "batch-ptask-worker"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: batch-ptask-worker
  namespace: tcir-app
  labels:
    name: batch-ptask-worker
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: batch-ptask-worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-api
  namespace: tcir-app
  labels:
    name: external-api
spec:
  selector:
    matchLabels:
      name: external-api
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  template:
    metadata:
      labels:
        name: external-api
    spec:
      containers:
      - name: external-api
        image: "3dsinteractive/automation-technology:prd-1.0.20210118001006"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: MY_NODE_NAME, valueFrom: { fieldRef: { fieldPath: spec.nodeName }}}, {name: MY_POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name }}}, {name: MY_NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace }}}, {name: SERVICE_ID, value: "external-api"} ,{"name":"CACHE_SERVER","value":"redis:6379"},{"name":"MQ_SERVERS","value":"kfk1:9092,kfk2:9092,kfk3:9092"}]
        ports:
        - name: connect8080
          containerPort: 8080
        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 8Gi
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: external-api
  namespace: tcir-app
  labels:
    name: external-api
spec:
  ports:
  - port: 8080
    name: connect8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: external-api
---
